stages:          # List of stages for jobs, and their order of execution
  - build
#   - test
  - deploy


build-job/getting-branch-name:
  stage: build
  only:
    - dev/backend/auth
  script:
    - echo "Getting branch name..."
    - echo $CI_COMMIT_BRANCH
    - read SERVICE_NAME < <(echo $CI_COMMIT_BRANCH | sed 's/dev\/backend\///')
    - echo "SERVICE NAME is $SERVICE_NAME"
    - export SERVICE_NAME
    - echo "CI_COMMIT_SHA is $CI_COMMIT_SHA"
    - echo "CI_COMMIT_SHORT_SHA is $CI_COMMIT_SHORT_SHA"
    - echo "CI_BUILD_TAG is $CI_BUILD_TAG"
    - echo "CI_PIPELINE_IID is $CI_PIPELINE_IID"


build-job:       # This job runs in the build stage, which runs first.
  stage: build
  needs: ["build-job/getting-branch-name"]
  only:
    - dev/backend/auth
  before_script:
    - echo $CI_COMMIT_BRANCH
    - read SERVICE_NAME < <(echo $CI_COMMIT_BRANCH | sed 's/dev\/backend\///')
  script:
    - echo "Compiling the code..."
    - chmod +x gradlew
    - ./gradlew clean bootJar
    - docker build -t itmagician/b305-vuddy-$SERVICE_NAME:$CI_COMMIT_SHA .
    - docker tag itmagician/b305-vuddy-$SERVICE_NAME:$CI_COMMIT_SHA itmagician/b305-vuddy-$SERVICE_NAME
    - docker push itmagician/b305-vuddy-$SERVICE_NAME:$CI_COMMIT_SHA
    - docker push itmagician/b305-vuddy-$SERVICE_NAME
    - echo "Compile complete."

build-job/deploy-argo-cd:       # This job runs in the build stage, which runs first.
  stage: build
  needs: ["build-job"]
  only:
    - dev/backend/auth
  before_script:
    - echo $CI_COMMIT_BRANCH
    - read SERVICE_NAME < <(echo $CI_COMMIT_BRANCH | sed 's/dev\/backend\///')
    - echo "https://${CI_USERNAME}:${CI_TOKEN}@lab.ssafy.com/s08-final/S08P31B305.git"
    - git clone "https://${CI_USERNAME}:${CI_TOKEN}@lab.ssafy.com/s08-final/S08P31B305.git" "${CI_COMMIT_SHA}"
    - cd "${CI_COMMIT_SHA}"
    - git checkout devops/kubernetes/argo-cd/develop
    - cd helm-chart
    - ls -R .
  script:
    - yq e -i '.backend.auth.image.tag = env(CI_COMMIT_SHA)' backendImages-values.yaml
    - git add .
    - git commit -m "$CI_COMMIT_BRANCH's image is updated"
    - git push origin devops/kubernetes/argo-cd/develop -o ci.skip
    

deploy-job/clean:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  needs: ["build-job"]
  only:
    - dev/backend/auth
  environment: production
  allow_failure: true
  before_script:
    - echo $CI_COMMIT_BRANCH
    - read SERVICE_NAME < <(echo $CI_COMMIT_BRANCH | sed 's/dev\/backend\///')
  script:
    - echo "clean ${SERVICE_NAME}-service container..."
    - docker container stop ${SERVICE_NAME}-service
    - docker container rm ${SERVICE_NAME}-service
    - echo "Application successfully cleaned."

deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  needs: ["deploy-job/clean"]
  only:
    - dev/backend/auth
  environment: production
  before_script:
    - echo $CI_COMMIT_BRANCH
    - read SERVICE_NAME < <(echo $CI_COMMIT_BRANCH | sed 's/dev\/backend\///')
  script:
    - echo "Deploying application..."
    - docker run --name ${SERVICE_NAME}-service -p 9011:8080 -e MYSQL_PASSWORD=$MYSQL_PASSWORD -e MYSQL_URL=$MYSQL_URL -e MYSQL_USERNAME=$MYSQL_USERNAME -d itmagician/b305-vuddy-$SERVICE_NAME
    - echo "Application successfully deployed."
