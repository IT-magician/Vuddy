include:
 # To fetch the stable template, use:
  - template: Terraform.gitlab-ci.yml

variables:
 TF_STATE_NAME: default
 TF_CACHE_KEY: default
 # If your terraform files are in a subdirectory, set TF_ROOT accordingly. For example:
 # TF_ROOT: terraform/production

 
# build:
#   rules:
#     - if: $TF_DESTROY == "true"
#       variables:
#         TF_CLI_ARGS_plan: "-destroy"
#     - when: on_success

deploy:
  environment:
    name: $TF_STATE_NAME
    action: start
    on_stop: destroy
  rules:
    - if: $TF_DESTROY == "true"
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $TF_AUTO_DEPLOY == "true"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: manual

destroy:
  extends: .terraform:destroy
  dependencies:
    - build
  variables:
    TF_CLI_ARGS_destroy: "${TF_PLAN_CACHE}"
  environment:
    name: $TF_STATE_NAME
    action: stop
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $TF_DESTROY == "true"
      when: manual