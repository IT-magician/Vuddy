apiVersion: apps/v1
kind: Deployment
metadata:
  name: feed
  namespace: {{ .Release.Namespace }}
  labels:
    app: feed
spec:
  selector:
    matchLabels:
      app: feed
  replicas: {{ .Values.backend.feed.replicaCount }}
  # strategy:
  #   rollingUpdate:
  #     maxSurge: 25%
  #     maxUnavailable: 25%
  #   type: RollingUpdate
  template:
    metadata:
      labels:
        app: feed
    spec:
      containers:
        - name: feed
          {{ if (empty .Values.backend.feed.image.tag) }}
          image: itmagician/b305-vuddy-feed
          {{ else }}
          image: {{ printf "itmagician/b305-vuddy-feed:%s" .Values.backend.feed.image.tag }}
          {{ end }}
          # resources:
          #   requests:
          #     cpu: 100m
          #     memory: 100Mi
          #   limits:
          #     cpu: 100m
          #     memory: 100Mi
          # livenessProbe:
          #   tcpSocket:
          #     port: 80
          #   initialDelaySeconds: 5
          #   timeoutSeconds: 5
          #   successThreshold: 1
          #   failureThreshold: 3
          #   periodSeconds: 10
          # readinessProbe:
          #   httpGet:
          #     path: /_status/healthz
          #     port: 80
          #   initialDelaySeconds: 5
          #   timeoutSeconds: 2
          #   successThreshold: 1
          #   failureThreshold: 3
          #   periodSeconds: 10
          env:
            - name: MYSQL_URL
              value: {{ .Values.mysql.url }}
            - name: MYSQL_USERNAME
              value: {{ .Values.mysql.username }}
            - name: MYSQL_PASSWORD
              value: {{ .Values.mysql.password }}
          ports:
            - containerPort: 8080
      restartPolicy: {{ .Values.backend.feed.image.pullPolicy }}
---
apiVersion: v1
kind: Service
metadata:
  name: feed-svc
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    app: feed
  type: ClusterIP
  # sessionAffinity: None
  # sessionAffinityConfig:
  #   clientIP:
  #     timeoutSeconds: 10800
  ports:
    - name: feed-svc
      protocol: TCP
      port: 80
      targetPort: 8080
